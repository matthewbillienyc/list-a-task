<div class="row bottom-margin">
  <div class="col-lg-4" id="add-list">
    <div class="well">
      <%= form_for @list, html: {class: "form-horizontal", id: "add-list"}, remote: true do |f| %>
        <%= f.submit 'Add List', class: "btn btn-primary" %>
        <%= f.hidden_field :user_id, value: @user.id %>
        <%= f.text_field :name, placeholder: "List Name" %>
      <% end %>
    </div>
  </div>
  <div class="col-lg-4" id="add-task">
    <div class="well">
      <%= form_for Task.new, html: {class: "form-horizontal add-task"}, remote: true do |f| %>
        <p><%= f.submit "Add Task", class: "btn btn-primary" %></p>
        <p><%= f.label :list_id, "Select List:" %> <%= f.select :list_id, @user.lists.map {|list| [list.name, list.id]} %></p>
        <p><%= f.label :priority, "Priority Level:" %> <%= f.select :priority, [["low", "low"], ["medium", "medium"], ["high", "high"]] %></p>
        <p><%= f.text_area :description, placeholder: "description" %></p>
      <% end %>
    </div>
  </div>
</div>
<div class="row">
  <div class="lists-div">
    <% @user.lists.each do |list| %>
      <%= render partial: 'lists/list', locals: {list: list, task: Task.new} %>
    <% end %>
  </div>
</div>
<script type="text/javascript">
  $(function(){

    checkForLists();
    var deleteBtns = $(".delete-list");
    var newTaskBtn = $(".add-task");
    var taskBtns = $(".delete-task");
    var starBtns = $("#star-btn");
    var unstarBtns = $("#unstar-btn");
    addDeleteTaskListener.call(taskBtns);
    addDeleteListener.call(deleteBtns);
    addNewTaskListener.call(newTaskBtn);
    addStarListener.call(starBtns);
    addUnstarListener.call(unstarBtns);

    $("#add-list").on("ajax:success", function(e, data){
      $(".lists-div").append(data.list_partial);
      checkForLists();
      var deleteBtns = $(".delete-list");
      var starBtn = $("#list-"+data.list.id+" > .star-span #star-btn");
      addDeleteListener.call(deleteBtns);
      addStarListener.call(starBtn);
      $("#task_list_id").append(data.options_partial);
      $("#add-list input[type='text']").val("");
    })

    function addUnstarListener(){
      this.on("ajax:success", function(e, data){
        var stype = data.starable_type.toLowerCase();
        $("#"+stype+"-"+data.starable_id+" > .star-span").html(data.star_partial);
        var starBtn = $("#"+stype+"-"+data.starable_id+" > .star-span #star-btn");
        addStarListener.call(starBtn);
      })
    }

    function addStarListener(){
      this.on("ajax:success", function(e, data){
        var stype = data.star.starable_type.toLowerCase();
        $("#"+stype+"-"+data.star.starable_id+" > .star-span").html(data.unstar_partial);
        var unstarBtn = $("#"+stype+"-"+data.star.starable_id+" > .star-span #unstar-btn");
        addUnstarListener.call(unstarBtn);
      })
    }

    function addDeleteListener(){
      this.on("ajax:success", function(e, data){
        $("#whole-list-"+data.list_id).remove();
        $("option[value='"+data.list_id+"']").remove()
        checkForLists();
      })
    }

    function addNewTaskListener(){
      this.on("ajax:success", function(e, data){
        $("#whole-list-"+data.task.list_id+" ul").append(data.task_partial)
        var taskDeletes = $(".delete-task");
        var starBtn = $("#task-"+data.task.id+" > .star-span #star-btn");
        addStarListener.call(starBtn);
        addDeleteTaskListener.call(taskDeletes);
        $(".add-task textarea").val("")
      })
    }

    function addDeleteTaskListener(){
      this.on("ajax:success", function(e, data){
        $("#task-"+data.task_id).remove()
      })
    }

    function checkForLists(){
      var lists = $(".list");
      if (lists.length == 0){
        $("#add-task").hide();
      } else {
        $("#add-task").show()
      }
    }

  })
</script>
